/*
 * App Global CSS
 * ----------------------------------------------------------------------------
 * Put style rules here that you want to apply globally. These styles are for
 * the entire app and not just one component. Additionally, this file can be
 * used as an entry point to import other CSS/Sass files to be included in the
 * output CSS.
 * For more information on global stylesheets, visit the documentation:
 * https://ionicframework.com/docs/layout/global-stylesheets
 */

/* Core CSS required for Ionic components to work properly */
@import '@ionic/angular/css/core.css';

/* Basic CSS for apps built with Ionic */
@import '@ionic/angular/css/normalize.css';
@import '@ionic/angular/css/structure.css';
@import '@ionic/angular/css/typography.css';
@import '@ionic/angular/css/display.css';

/* Optional CSS utils that can be commented out */
@import '@ionic/angular/css/padding.css';
@import '@ionic/angular/css/float-elements.css';
@import '@ionic/angular/css/text-alignment.css';
@import '@ionic/angular/css/text-transformation.css';
@import '@ionic/angular/css/flex-utils.css';

/**
 * Ionic Dark Mode
 * -----------------------------------------------------
 * For more info, please see:
 * https://ionicframework.com/docs/theming/dark-mode
 */

/* @import "@ionic/angular/css/palettes/dark.always.css"; */
/* @import "@ionic/angular/css/palettes/dark.class.css"; */
@import '@ionic/angular/css/palettes/dark.system.css';

// plain
@font-face {
  font-family: 'Libre Baskerville';
  src: url('/font/LibreBaskerville-Regular.eot');
  src:
    url('/font/LibreBaskerville-Regular.eot?#iefix') format('embedded-opentype'),
    url('/font/LibreBaskerville-Regular.woff2') format('woff2'),
    url('/font/LibreBaskerville-Regular.woff') format('woff'),
    url('/font/LibreBaskerville-Regular.ttf') format('truetype');
  font-weight: 400;
  font-style: normal;
}

/* italic */
@font-face {
  font-family: 'Libre Baskerville';
  src: url('/font/LibreBaskerville-Italic.eot');
  src:
    url('/font/LibreBaskerville-Italic.eot?#iefix') format('embedded-opentype'),
    url('/font/LibreBaskerville-Italic.woff2') format('woff2'),
    url('/font/LibreBaskerville-Italic.woff') format('woff'),
    url('/font/LibreBaskerville-Italic.ttf') format('truetype');
  font-weight: 400;
  font-style: italic;
}

/* bold */
@font-face {
  font-family: 'Libre Baskerville';
  src: url('/font/LibreBaskerville-Bold.eot');
  src:
    url('/font/LibreBaskerville-Bold.eot?#iefix') format('embedded-opentype'),
    url('/font/LibreBaskerville-Bold.woff2') format('woff2'),
    url('/font/LibreBaskerville-Bold.woff') format('woff'),
    url('/font/LibreBaskerville-Bold.ttf') format('truetype');
  font-weight: 700;
  font-style: normal;
}

* {
  font-family: 'Libre Baskerville', serif;
}

body {
  --ion-text-color: #000;
}

ion-title,
ion-toolbar,
ion-item {
  --color: #000;
}

.alert-radio-label {
  color: var(--ion-text-color) !important;
}

ion-toolbar,
ion-content,
ion-router-outlet,
.popover-content,
.alert-wrapper,
.show-modal {
  --background: url('/img/background.png') repeat;
}

ion-router-outlet {
  background: url('/img/background.png') repeat;
}

ion-list {
  --ion-item-background: url('/img/background.png') repeat;
  background: transparent !important;
  padding-top: 0 !important;
}

ion-checkbox {
  padding-left: 6px;
  --border-color: var(--ion-color-primary) !important;
}

ion-item,
a[href],
img[href] {
  cursor: pointer;
}

a[href] > img {
  pointer-events: none;
}

.inline-icon {
  max-height: 16px;
  max-width: 16px;
}

.romanized-list {
  list-style-position: outside;
  list-style-type: none;

  @media (max-width: 576px) {
    padding-left: 20px;
  }

  li {
    position: relative;

    counter-increment: romanizedsub;
  }

  li::before {
    content: counters(romanizedsub, '', upper-roman);

    position: absolute;
    left: -40px;
    top: 3px;

    font-size: 12px;

    @media (max-width: 576px) {
      left: -20px;
    }
  }
}

.alphabeta-list {
  list-style-position: outside;
  list-style-type: none;

  @media (max-width: 576px) {
    padding-left: 20px;
  }

  li {
    position: relative;

    counter-increment: alphabetasub;
  }

  li::before {
    content: counters(alphabetasub, '', upper-alpha);

    position: absolute;
    left: -40px;
    top: 3px;

    font-size: 10px;

    @media (max-width: 576px) {
      left: -20px;
    }
  }
}

.sublist {
  margin-top: 10px;
}

.emph {
  font-variant: small-caps;
}

.error {
  color: #f00;
  font-weight: bold;
}

mark {
  background-color: #bc4424;
  color: #fff;
}

a:not(.rule-link) {
  text-decoration: none;
  color: #000;

  &:hover {
    text-decoration: underline;
    color: var(--ion-color-primary);
  }
}

@media only screen and (min-height: 600px) and (min-width: 768px) {
  .sc-ion-modal-md-h {
    --height: 80%;
    --width: 80%;
  }

  .alert-wrapper {
    --min-width: 500px;
  }
}

.true-center {
  display: flex;
  justify-content: center;
  align-items: center;
  height: 100%;
  font-size: 2em;
}

.hidden {
  display: none;
}

p {
  display: inline;
  margin: 0;
}

.specialhighlight {
  padding: 5px;
  background-color: #ead2e4;
}

.dropdown-list {
  padding-bottom: 0 !important;
}

table {
  margin-top: 4px;

  td,
  th {
    text-align: left;
    padding: 6px;
    border: 1px solid #aaa;
  }
}

@media (any-pointer: coarse) {
  *::-webkit-scrollbar-thumb {
    background: #999;
  }

  *::-webkit-scrollbar {
    display: block !important;
    background-color: transparent;
    width: 6px;
  }
}
